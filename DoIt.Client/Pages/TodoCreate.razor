@page "/todos/create"

@using DoIt.Client.Components;
@using DoIt.Client.Models;

@inject HttpClient Http;

<h3>TodoCreate</h3>

<a href="/todos">&lArr;</a>

<EditForm Model="NewTodo" OnValidSubmit="CreateTodo">
	@* What is this? *@
	<DataAnnotationsValidator />

	<TextField @bind-Value="NewTodo.Title" Label="Title" IsMandatory="true" ValidationFor="@(() => NewTodo.Title)" />
	<TextField @bind-Value="NewTodo.Description" Label="Description" ValidationFor="@(() => NewTodo.Description)" />

	<button type="submit">Creatde</button>
</EditForm>


@code {
	public Todo NewTodo = new Todo();

	protected override void OnInitialized()
	{
	}

	async Task CreateTodo()
	{
		// Todo:  Validate title is described

		//var todo = new Todo { Title = this.Title, Description = this.Description, IsFinished = false };

		Console.WriteLine($"Address: {Http.BaseAddress}");
		var response = await Http.PostAsJsonAsync<Todo>("api/todos", NewTodo);

		if (response.StatusCode == System.Net.HttpStatusCode.Created)
		{
			Console.WriteLine("Todo created!");
		}
		else
		{
			Console.WriteLine("Something went wrong while creating the todo...");
		}

	}

}
