@inherits InputBase<string>

<div class="text-field field wrapper">
    @if (HasLabel)
    {
        <label for="@Label">@LabelView</label>
    }
    @if (Multiline)
    {
        <textarea name="@Label" @bind="@CurrentValue" style="width: @Width" type="text" autocomplete="off" />
    }
    else
    {
        <input name="@Label" multiple @bind="@CurrentValue" style="width: @Width" type="text" autocomplete="off" 
        @onfocusin="OnFocusInField" @onfocusout="OnFocusOutField"
        @oninput="OnFieldInputEvent" />
        @if (IsDisplayAutocomplete)
        {
            <div class="autocomplete-options" @onmouseover="OnAutocompleteMouseOver" @onmouseout="OnAutocompleteMouseOut">
                @foreach (var option in FilteredAutocompleteOptions)
                {
                    <div class="option" @onclick="() => SelectOption(option)">
                        @option
                    </div>
                }
            </div>
        }
    }
    <span class="bar" style="--input-width: @Width"></span>
    <ValidationMessage For="@ValidationFor" />
</div>

@*
            <mat-form-field class="example-chip-list" appearance="fill">
  <mat-label>Favorite Fruits</mat-label>
  <mat-chip-list #chipList aria-label="Fruit selection">
    <mat-chip
      *ngFor="let fruit of fruits"
      (removed)="remove(fruit)">
      {{fruit}}
      <button matChipRemove>
        <mat-icon>cancel</mat-icon>
      </button>
    </mat-chip>
    <input
      placeholder="New fruit..."
      #fruitInput
      [formControl]="fruitCtrl"
      [matAutocomplete]="auto"
      [matChipInputFor]="chipList"
      [matChipInputSeparatorKeyCodes]="separatorKeysCodes"
      (matChipInputTokenEnd)="add($event)">
  </mat-chip-list>
  <mat-autocomplete #auto="matAutocomplete" (optionSelected)="selected($event)">
    <mat-option *ngFor="let fruit of filteredFruits | async" [value]="fruit">
      {{fruit}}
    </mat-option>
  </mat-autocomplete>
</mat-form-field>*@