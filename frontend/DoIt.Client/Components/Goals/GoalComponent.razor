@using DoIt.Client.Models.Modals
@using DoIt.Client.Pages.Goals.Detail;
@using DoIt.Client.Services.Modals;
@using DoIt.Interface.Goals
@using DoIt.Client.Extensions

@implements IDisposable

@inject NavigationManager NavManager;
@inject ModalService Modal;

<article class="goal @IsActive()" @onclick="() => OpenDetailGoal(Goal.Id)">
    <header>
        @Goal.Title
    </header>
    @*<div class="goal-type">
    <GoalTypeIconComponent GoalType="Goal.Type" />
    </div>*@
    <section class="goal-progress">
        <span>Progress</span>
        <div class="goal-progress-bar">
            <DoIt.Client.Components.Progress.ProgressBarComponent Completion="@Goal.CompletionPercentage" />
        </div>
    </section>
    <section class="goal-details">
        <div class="goal-details-days-left">
            Days left
            <span>
                @daysLeftText
            </span>
        </div>
        <div class="goal-details-due-date">
            Due at
            <span>
                @dueDateText
            </span>
        </div>
    </section>
    @*<section class="tasks-short-list">
    <ul>
    <li>[] Get skills</li>
    <li>[] Get good</li>
    <li>[] Get better</li>
    </ul>
    </section>*@
</article>

@code {
    [Parameter]
    public GoalDto Goal { get; set; }

    private string daysLeftText;
    private string dueDateText;


    protected override void OnInitialized()
    {
        base.OnInitialized();

        daysLeftText = ((int)(Goal.DueAt - DateTime.UtcNow).TotalDays).ToString();
        dueDateText = Goal.DueAt.ToStringFormat();
    }

    private string IsActive()
    {
        if(Goal.State == Interface.State.Focused)
        {
            return "active";
        }

        return "";
    }

    private void OpenDetailGoal(long id)
    {
        Modal.Show(new ModalBuilder()
        .AddComponent<GoalDetailPage, GoalDetailParameter>(new GoalDetailParameter() { GoalId = id })
        .AddConfiguration(new ModalConfiguration() { FullScreen = true })
        .Build());
    }

    public void Dispose()
    {
    }
}