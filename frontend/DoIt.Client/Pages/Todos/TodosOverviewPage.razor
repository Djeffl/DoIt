@page "/todos"

@using DoIt.Client.Components.Loading
@using DoIt.Client.Extensions
@using DoIt.Interface.Todos
@using Models.Todos;
@using Services.Todos;

@inject ITodoService TodoService;

@inherits BaseComponent

<LoadingContainerComponent LoadingState="LoadingState">
    <Rendered>
        <section class="ideas">
            <div class="filter">
            </div>
            <ul class="ideas-list">
                @if (_todos.Any())
                {
                    @foreach (var todo in _todos)
                    {
                        <li class="ideas-list-item" @onclick="() => OpenDetailTodo(todo.Id)">
                            <article class="todo">
                                <div class="todo-data">
                                    <div class="todo-title">
                                        @todo.Title
                                    </div>
                                    <div class="todo-description">
                                        @todo.Description
                                    </div>
                                    <div class="idea-date">
                                        @*@todo.DueAt.ToStringFormat()*@
                                    </div>
                                </div>
                            </article>
                        </li>
                    }
                }
            </ul>
        </section>
    </Rendered>
</LoadingContainerComponent>

@code {
    private List<TodoDto> _todos;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected override async Task LoadDataAsync()
    {
        _todos = await TodoService.GetAllAsync();
    }

    private Task UpdateTodoIsFinished(int id, bool updatedIsFinished)
    {
        return Task.CompletedTask;
        //Console.WriteLine($"Updating todo - Id: '{id}. Todo.IsFinished set to {updatedIsFinished}");
        //await Http.PatchAsync($"api/todos/{id}", new StringContent(JsonConvert.SerializeObject(new UpdateTodo { IsFinished = updatedIsFinished }), System.Text.Encoding.UTF8, "application/json-patch+json"));
    }

    private void OpenDetailTodo(long id)
    {
        //ModalService.Show("Todo", typeof(DoIt.Client.Pages.TodoDetail));
    }
}
