@page "/ideas"
@using DoIt.Client.Components.Loading
@using DoIt.Client.Services.Ideas
@using DoIt.Client.Pages.Ideas.Detail

@using DoIt.Client.Services.Modals

@using DoIt.Client.Services.Goals
@using DoIt.Client.Models.General
@using DoIt.Interface.Ideas
@using DoIt.Client.Extensions

@inherits BaseComponent

@inject IIdeaService IdeaService;
@inject IGoalService GoalService;
@inject ModalService Modal;
@inject NavigationManager NavigationManager;
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage;

<LoadingContainerComponent LoadingState="LoadingState">
    <Rendered>
        <section class="ideas">
            <div class="filter">
                
            </div>
            <ul class="ideas-list">
                @if (Ideas.Any())
                {
                    @foreach (var idea in Ideas)
                    {
                        <li class="ideas-list-item" @onclick="() => OpenDetailGoal(idea.Id)">
                            <article class="idea">
                                <div class="idea-data">
                                    <div class="idea-title">
                                        @idea.Title
                                    </div>
                                    <div class="idea-description">
                                        @idea.Description
                                    </div>
                                    <div class="idea-date">
                                        @idea.CreatedAt.ToStringFormat()
                                    </div>
                                    @if (idea.Categories.Any())
                                    {
                                        <div class="idea-categories">
                                            @foreach (var ideaCategory in idea.Categories)
                                            {
                                                <div class="idea-category">
                                                    @ideaCategory.Name
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            </article>
                        </li>
                    }
                }
            </ul>
        </section>
    </Rendered>
</LoadingContainerComponent>
